name: Terraform Static Web App Deploy

on:
  push:
    branches: 
      - main

env:
  TERRAFORM_SECRETS_PATH: 'terraform-secrets'
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ SECRETS.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ SECRETS.AZURE_TENANT_ID }}

jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{env.ARM_CLIENT_ID}}
          tenant-id:  ${{env.ARM_TENANT_ID}}
          subscription-id: ${{env.ARM_SUBSCRIPTION_ID}}

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az account show
            az storage -h


      - name: Checkout 
        uses: actions/checkout@v3

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      
      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -no-color -input=false
  
  terraform_apply:
    name: 'terraform apply'
    needs: [terraform_plan]
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash
        
    steps:
    - name: Checkout 
      uses: actions/checkout@v3

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v3
      
    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false
      
    - name: Load Secret
      run: |
        mkdir -p ${{ env.TERRAFORM_SECRETS_PATH }}
        terraform output sample-web-api-key > ${{ env.TERRAFORM_SECRETS_PATH }}/swa-secret.txt

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.TERRAFORM_SECRETS_PATH }}
        path: ${{ env.TERRAFORM_SECRETS_PATH }}

  build_and_deploy:
    name: 'build and deploy'
    needs: [terraform_apply]
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: ${{ env.TERRAFORM_SECRETS_PATH }}
          path: ${{ env.TERRAFORM_SECRETS_PATH }}
    
      - name: Load Secret
        id: load-secret
        run: echo "swa-secret=$(cat ${{ env.TERRAFORM_SECRETS_PATH }}/swa-secret.txt)" >> $GITHUB_OUTPUT
    
      # - name: Show Secret
      #   run: echo ${{ steps.load-secret.outputs.swa-secret }}

      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: '18.x'

      # - name: Build Web
      #   run: |
      #       npm install
      #       npm run build:prod
      #   working-directory: web

      # - name: Build And Deploy
      #   id: builddeploy
      #   uses: Azure/static-web-apps-deploy@v1
      #   with:
      #     azure_static_web_apps_api_token: "${{ steps.load-secret.outputs.swa-secret }}"
      #     repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
      #     action: "upload"
      #     ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
      #     # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
      #     app_location: "/web" # App source code path
      #     api_location: "" # Api source code path - optional
      #     output_location: "dist/web" # Built app content directory - optional
      #     app_build_command: npm run build:prod
      #     ###### End of Repository/Build Configurations ######